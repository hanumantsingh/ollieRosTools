<launch>
    <!-- INTRO -->
    <!-- This launch file streams camera images from /dev/videoX where X is given as cam:=X, -->
    <!-- starts a PreProcessing node that does preprocessing/filtering/etc and optionally does PTAM -->
    <!-- rectification, starts a dynamic reconfigure gui and rviz to view the rectified image as  -->
    <!-- a camera. Some static transform publishers are needed to link various TF frames  -->
    

    <!-- OPTIONS -->
    <arg name="cam"/>
    <arg name="DEVICE" default="/dev/video$(arg cam)"/>
    <arg name="FPS"    default="25/1"/>
    <arg name="NAME"   default="cf/cam" />
    <arg name="FRAME"  default="cam"/>


    <!-- GS CAM -->
    <env name="GSCAM_CONFIG" value="v4l2src device=$(arg DEVICE) ! video/x-raw-yuv,format=\(fourcc\)YUY2,width=720,height=576,framerate=$(arg FPS) ! ffmpegcolorspace " />
    <node pkg="gscam" type="gscam" name="gscam" required="true" output="screen">
        <param name="camera_name" value="$(arg NAME)" />
        <!-- param name="camera_info_url" value="package://gscam/examples/uncalibrated_parameters.ini" / -->
        <param name="frame_id" value="$(arg FRAME)"/>
        <param name="sync_sink" value="true"/>
        <remap from="camera/image_raw" to="$(arg NAME)/image_raw" />
    </node>

    <!-- EVERYTHING ELSE -->
    <include file="$(find ollieRosTools)/launch/testNoVid.launch">
        <arg name="NAME" value="$(arg NAME)" />
        <arg name="FRAME" value="$(arg FRAME)" />
    </include>



</launch>
