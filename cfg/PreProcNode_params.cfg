#! /usr/bin/env python

PACKAGE='ollieRosTools'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()





deinterlace_enum = gen.enum([
gen.const("HALF_CUT", int_t, -2, "nearest-neighbor interpolation"),
gen.const("INTERLACED", int_t, -1, "nearest-neighbor interpolation"),
gen.const("HALF_NEAREST", int_t, 0, "nearest-neighbor interpolation"),
gen.const("HALF_LINEAR", int_t, 1, "bilinear interpolation"),
gen.const("HALF_AREA", int_t, 2, "resampling using pixel area relation"),
gen.const("HALF_CUBIC", int_t, 3, "bicubic interpolation over 4x4 pixel neighborhood"),
gen.const("HALF_LANCZOS4", int_t, 4, "Lanczos interpolation over 8x8 pixel neighborhood"),
gen.const("JAKOB", int_t, 5, "Lanczos interpolation over 8x8 pixel neighborhood")
],"Set Deinterlace Method")

interpolation_enum = gen.enum([
gen.const("OFF", int_t, -1, "nearest-neighbor interpolation"),
gen.const("INTER_NEAREST", int_t, 0, "nearest-neighbor interpolation"),
gen.const("LINEAR", int_t, 1, "bilinear interpolation"),
gen.const("AREA", int_t, 2, "resampling using pixel area relation"),
gen.const("CUBIC", int_t, 3, "bicubic interpolation over 4x4 pixel neighborhood"),
gen.const("LANCZOS4", int_t, 4, "Lanczos interpolation over 8x8 pixel neighborhood")
],"Set Interpolation Method")



filter_enum = gen.enum([
gen.const("Off",       int_t, -1,  "..." ),
gen.const("Median",       int_t, 0,  "..." ),
gen.const("Gaussian",        int_t, 1,  "..." ),
gen.const("Box",  int_t, 2,  "..." ),
gen.const("Bilateral",  int_t, 3,  "..." )
],"An enum to chose filter")




#################################################################
gen.add("node_on",  bool_t,   1, "Turn Node on",      True)

gen.add("doDeinterlace", int_t, 0, "Interpolation for Rotation", 1, -2, 5, edit_method=deinterlace_enum)
gen.add("doEqualise",  bool_t,   1, "Equalise the image histrogram",      True)
gen.add("doPreprocess", int_t, 0, "Filter Enum", -1, -1, 3, edit_method=filter_enum)
gen.add("PreProc_kernel",  int_t, 0, "...",          1, 0, 10)
gen.add("PreProc_SigX",  double_t, 0, "...",          1, 0, 200)
gen.add("PreProc_SigY",  double_t, 0, "...",          1, 0, 200)


gen.add("doRectify", int_t, 0, "Interpolation for Rectification", -1, -1, 5, edit_method=interpolation_enum)
gen.add("rect_width",     int_t, 0, "...",          720, 240, 1920)
gen.add("rect_height",     int_t, 0, "...",          480, 240, 1080)
gen.add("rect_zoom",     double_t, 0, "...",          4, 0.1, 10)



exit(gen.generate(PACKAGE, "PreProcNode", "PreProcNode_params"))
