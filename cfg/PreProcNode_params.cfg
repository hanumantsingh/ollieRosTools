#! /usr/bin/env python

PACKAGE='ollieRosTools'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()





deinterlace_enum = gen.enum([
gen.const("HALF_CUT",       int_t, -2, "Just take Odd rows"),
gen.const("FULL_INTERLACED",     int_t, -1, "Dont do anything, leave it interlaced"),
gen.const("HALF_NEAREST",   int_t, 0,  "nearest-neighbor interpolation of the even rows from the odd ones"),
gen.const("HALF_LINEAR",    int_t, 1,  "bilinear interpolation of the even rows from the odd ones"),
gen.const("HALF_AREA",      int_t, 2,  "resampling using pixel area relation of the even rows from the odd ones"),
gen.const("HALF_CUBIC",     int_t, 3,  "bicubic interpolation over 4x4 pixel neighborhood of the even rows from the odd ones"),
gen.const("HALF_LANCZOS4",  int_t, 4,  "Lanczos interpolation over 8x8 pixel neighborhood of the even rows from the odd ones")
],"Set Deinterlace Method for deinterlacing the incoming image")

interpolation_enum = gen.enum([
gen.const("OFF",            int_t, -1, "nearest-neighbor interpolation"),
gen.const("INTER_NEAREST",  int_t, 0,  "nearest-neighbor interpolation"),
gen.const("LINEAR",         int_t, 1,  "bilinear interpolation"),
gen.const("AREA",           int_t, 2,  "resampling using pixel area relation"),
gen.const("CUBIC",          int_t, 3,  "bicubic interpolation over 4x4 pixel neighborhood"),
gen.const("LANCZOS4",       int_t, 4,  "Lanczos interpolation over 8x8 pixel neighborhood")
],"Set Interpolation Method")

contrast_enum = gen.enum([
gen.const("AUTO",            int_t, -2, "nearest-neighbor interpolation"),
gen.const("NONE",            int_t, -1, "nearest-neighbor interpolation"),
gen.const("MANUAL_INTER_NEAREST",  int_t, 0,  "nearest-neighbor interpolation"),
gen.const("MANUAL_LINEAR",         int_t, 1,  "bilinear interpolation"),
gen.const("MANUAL_AREA",           int_t, 2,  "resampling using pixel area relation"),
gen.const("MANUAL_CUBIC",          int_t, 3,  "bicubic interpolation over 4x4 pixel neighborhood"),
gen.const("MANUAL_LANCZOS4",       int_t, 4,  "Lanczos interpolation over 8x8 pixel neighborhood")
],"Set Interpolation Method")




filter_enum = gen.enum([
gen.const("Off",         int_t, -1,  "..." ),
gen.const("Median",      int_t, 0,   "..." ),
gen.const("Gaussian",    int_t, 1,   "..." ),
gen.const("Box",         int_t, 2,   "..." ),
gen.const("Bilateral",   int_t, 3,   "..." )
],"Set smoothing method")




#################################################################
gen.add("nodeOn",  bool_t,   1, "Turn Node on",      True)

gen.add("doDeinterlace", int_t,    0, "Interpolation for Rotation", -1, -2, 4, edit_method=deinterlace_enum)
gen.add("doEqualise",  int_t,    0, "Equalise the image histrogram", -1, -2, 4, edit_method=contrast_enum)
gen.add("brightness",        double_t, 0, "...",          0, -1, 1)
gen.add("contrast",        double_t, 0, "...",          0, -1, 1)
gen.add("doPreprocess",  int_t,    0, "Filter Enum", -1, -1, 3, edit_method=filter_enum)
gen.add("kernelSize",    int_t,    0, "...",          1, 0, 10)
gen.add("sigmaX",        double_t, 0, "...",          3, 0, 200)
gen.add("sigmaY",        double_t, 0, "...",          3, 0, 200)


gen.add("PTAMRectify", int_t, 0, "Interpolation for Rectification", -1, -1, 5, edit_method=interpolation_enum)
gen.add("width",     int_t, 0, "...",          720, 240, 1920)
gen.add("height",     int_t, 0, "...",          480, 240, 1080)
gen.add("zoom",     double_t, 0, "...",          1, 0.1, 1.5)

gen.add("fx",     double_t, 0, "...",          0.425198,0, 1)
gen.add("fy",     double_t, 0, "...",          0.579108,0, 1)
gen.add("cx",     double_t, 0, "...",          0.477752,0, 1)
gen.add("cy",     double_t, 0, "...",          0.581669,0, 1)
gen.add("s",      double_t, 0, "...",          0.970746,0, 2)



exit(gen.generate(PACKAGE, "PreProcNode", "PreProcNode_params"))
